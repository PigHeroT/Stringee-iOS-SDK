
<div class="wrapClass classiOs">


  <div class="header">
    <h1>StringeeCall</h1>
    <pre><code>@interface StringeeCall : NSObject</code></pre>
    <p>This class provides methods to make/receive a Stringee call. It contains all data of a call.</p>
  </div>



  <table border="0" cellpadding="3" cellspacing="0">
    <tbody>

      <tr>
        <th>callId</th>
      </tr>

      <tr>
        <td>
          <p>The call's id generated by Stringee server.</p>
          <pre><code>@property (strong, nonatomic, readonly) NSString *callId;</code></pre>
        </td>
      </tr>


      <tr>
        <th>from</th>
      </tr>
      <tr>
        <td>
          <p>The caller's phone number or id.</p>
          <pre><code>@property (strong, nonatomic, readonly) NSString *from;</code></pre>
        </td>
      </tr>

      <tr>
        <th>to</th>
      </tr>
      <tr>
        <td>
          <p>The callee's phone number or id.</p>
          <pre><code>@property (strong, nonatomic, readonly) NSString *to;</code></pre>
        </td>
      </tr>

      <tr>
        <th>fromAlias</th>
      </tr>
      <tr>
        <td>
          <p>The alias of the caller.</p>
          <pre><code>@property (strong, nonatomic, readonly) NSString *fromAlias;</code></pre>
        </td>
      </tr>

      <tr>
        <th>toAlias</th>
      </tr>
      <tr>
        <td>
          <p>The alias of the callee.</p>
          <pre><code>@property (strong, nonatomic, readonly) NSString *toAlias;</code></pre>
        </td>
      </tr>


      <tr>
        <th>callType</th>
      </tr>
      <tr>
        <td>
          <p>The type of the call. For more information, see <a href='https://developer.stringee.com/docs/ios/calltype'>CallType</a></p>
          <pre><code>@property (assign, nonatomic, readonly) CallType callType;</code></pre>
        </td>
      </tr>


      <tr>
        <th>isVideoCall</th>
      </tr>
      <tr>
        <td>
          <p>Whether the call is a video call: <br>
- isVideoCall = YES, a video call <br>
- isVideoCall = NO, a voice call</p>
          <pre><code>@property (assign, nonatomic) BOOL isVideoCall;</code></pre>

        </td>
      </tr>


      <tr>
        <th>videoResolution</th>
      </tr>
      <tr>
        <td>
          <p>The local video's resolution. For more information, see <a href='https://developer.stringee.com/docs/ios/videoresolution'>VideoResolution</a></p>
          <pre><code>@property (assign, nonatomic) VideoResolution videoResolution;</code></pre>
        </td>
      </tr>


      <tr>
        <th>localVideoView</th>
      </tr>
      <tr>
        <td>
          <p>The view in which the local video is rendered. For more information, see <a href='https://developer.stringee.com/docs/ios/stringeelocalvideoview'>StringeeLocalVideoView</a></p>
          <pre><code>@property (strong, nonatomic, readonly) StringeeLocalVideoView *localVideoView;</code></pre>
        </td>
      </tr>


      <tr>
        <th>remoteVideoView</th>
      </tr>
      <tr>
        <td>
          <p>The view in which the remote video is rendered. For more information, see <a href='https://developer.stringee.com/docs/ios/stringeeremotevideoview'>StringeeRemoteVideoView</a></p>
          <pre><code>@property (strong, nonatomic, readonly) StringeeRemoteVideoView *remoteVideoView;</code></pre>
        </td>
      </tr>


      <tr>
        <th>delegate</th>
      </tr>
            <tr>
        <td>
          <p>A delegate used to Monitors the call states and medias. For more information, see <a href='https://developer.stringee.com/docs/ios/stringeecalldelegate'>StringeeCallDelegate</a></p>
          <pre><code>@property (weak, nonatomic) id<StringeeCallDelegate> delegate;</code></pre>
        </td>
      </tr>

      <tr>
        <th>customData</th>
      </tr>
      <tr>
        <td>
          <p>This is a customizable text of the call. This text will be sent to Stringee server. Then Stringee server sends it to Your Server via the project's answer_url.</p>
          <pre><code>@property (strong, nonatomic) NSString *customData;</code></pre>
        </td>
      </tr>

      <tr>
        <th>customDataFromYourServer</th>
      </tr>
      <tr>
        <td>
          <p>The custom data from your server when a client makes a call.</p>
          <pre><code>@property (strong, nonatomic) NSString *customDataFromYourServer;</code></pre>
        </td>
      </tr>

      <tr>
        <th>- initWithStringeeClient:isIncomingCall:from:to:</th>
      </tr>
                                <tr>
        <td>
                  <p>Creates a new Stringeecall instance to answer a call.</p>
          <pre><code>- (instancetype)initWithStringeeClient:(StringeeClient *)stringeeClient isIncomingCall:(BOOL)isIncomingCall from:(NSString *)from to:(NSString *)to</code></pre>
        </td>
      </tr>



      <tr>
        <th>- makeCallWithCompletionHandler:</th>
      </tr>
                  <tr>
        <td>
          <p>Make a call with a callback: <br>
          - status = YES, code = 0, message = "Make call successfully" <br>
          - status = NO, code = 1, message = "Make call failed. Answer url is empty" <br>
          - status = NO, code = 2, message = "Make call failed. Answer url scco incorrect format" <br>
          - status = NO, code = 3, message = "Make call failed. To type is not internal or external" <br>
          - status = NO, code = 4, message = "Make call failed. From number not found" <br>
          - status = NO, code = 5, message = "Make call failed. From number not belong your account" <br>
          - status = NO, code = 6, message = "Make call failed. Sip truck not found" <br>
          - status = NO, code = 7, message = "Make call failed. Sip truck not belong your account" <br>
          - status = NO, code = 8, message = "Make call failed. Not enough money" <br>
          - status = NO, code = 9, message = "Make call failed. Unknow error." <br>
          - status = NO, code = 10, message = "Make call failed. The call is not allowed by your server or "to number" is not exist.<br>
          - status = NO, code = -1, message = "Make call failed. The client is not connected to Stringee Server" <br>
          - status = NO, code = -2, message = "Make call failed. Generic error" <br>
          - data: The custom data from your server.
          <pre><code>- (void)makeCallWithCompletionHandler:(void(^)(BOOL status, int code, NSString *message, NSString *data))completionHandler</code></pre>


          </p>
        </td>
      </tr>


      <tr>
        <th>- initAnswerCall</th>
      </tr>
                        <tr>
        <td>
          <p>Initializes an answer. Must be implemented before you can answer a call.</p>
          <pre><code>- (void)initAnswerCall;</code></pre>
        </td>
      </tr>

      <tr>
        <th>- answerCallWithCompletionHandler:</th>
      </tr>

      <tr>
        <td>
          <p>Answers a call with a callback: <br>
          - status = YES, code = 0, message = "Answer call successfully" <br>
          - status = NO, code = 1, message = "Answer call failed. The call is not exist" <br>
          - status = NO, code = 2, message = "Answer call failed. The call was controlled from other device" <br>
          - status = NO, code = 3, message = "Answer call failed. Call data is not exist" <br>
          - status = NO, code = -1, message = "Answer call failed. The client is not connected to Stringee Server."
          </p>
          <pre><code>- (void)answerCallWithCompletionHandler:(void(^)(BOOL status, int code, NSString * message)) completionHandler;</code></pre>
        </td>
      </tr>


      <tr>
        <th>- hangupWithCompletionHandler:</th>
      </tr>
                              <tr>
        <td>
          <p>Terminates a call with a callback: <br>
          - status = YES, code = 0, message = "Hangup call successfully." <br>
          - status = NO, code = 1, message = "Hangup call failed. The call is not exist." <br>
          - status = NO, code = 2, message = "Hangup call failed. The call answered on another device." <br>
          - status = NO, code = -1, message = "Hangup call failed. The client is not connected to Stringee Server."
          </p>
          <pre><code>- (void)hangupWithCompletionHandler:(void(^)(BOOL status, int code, NSString * message))completionHandler;</code></pre>
        </td>
      </tr>


      <tr>
        <th>- rejectWithCompletionHandler:</th>
      </tr>
      <tr>
        <td>
          <p>Reject a call with a callback: <br>
          - status = YES, code = 0, message = "Reject call successfully." <br>
          - status = NO, code = 1, message = "Reject call failed. The call is not exist." <br>
          - status = NO, code = 2, message = "Reject call failed. The call answered on another device." <br>
          - status = NO, code = -1, message = "Reject call failed. The client is not connected to Stringee Server."
          </p>
          <pre><code>- (void)rejectWithCompletionHandler:(void(^)(BOOL status, int code, NSString * message))completionHandler;</code></pre>
        </td>
      </tr>


      <tr>
        <th>- sendDTMF:completionHandler:</th>
      </tr>
                              <tr>
        <td>
          <p>Sends a DTMF with a callback: <br>
            - callDTMF: DTMF code. For more information, see <a href='https://developer.stringee.com/docs/ios/calldtmf'>CallDTMF</a><br>
            - message: a DTMF character. <br>
            - status = YES (code = 0): sends successfully, status = NO (code != 0): failed to send.</p>
          <pre><code>- (void)sendDTMF:(CallDTMF)callDTMF completionHandler:(void(^)(BOOL status, int code, NSString * message))completionHandler;</code></pre>

        </td>
      </tr>



      <tr>
        <th>- switchCamera</th>
      </tr>

                              <tr>
        <td>
          <p>Switches the device's camera.</p>
          <pre><code>- (void)switchCamera;</code></pre>
        </td>
      </tr>


      <tr>
        <th>- enableLocalVideo:</th>
      </tr>
                              <tr>
        <td>
                  <p>Enables or disables local video: <br>
- isEnable = YES enables local video. <br>
- isEnable = NO disables local video. <br>
Returns YES on success or NO on failure.
</p>
          <pre><code>- (BOOL)enableLocalVideo:(BOOL)isEnable;</code></pre>

        </td>
      </tr>



      <tr>
        <th>- mute:</th>
      </tr>
                              <tr>
        <td>
                  <p>Toggles audio on or off: <br>
- isMute = YES toggles audio off. <br>
- isMute = NO toggles audio on.</p>
          <pre><code>- (void)mute:(BOOL)isMute;</code></pre>

        </td>
      </tr>


      <tr>
        <th>- autoOrientationOfLocalVideoViewWithSize:withTransitionCoordinator:</th>
      </tr>

                              <tr>
        <td>
          <p>Implements auto-orientation support.</p>
          <pre><code>- (void)autoOrientationOfLocalVideoViewWithSize:(CGSize)size withTransitionCoordinator:(id<UIViewControllerTransitionCoordinator>)coordinator;</code></pre>
        </td>
      </tr>


      <tr>
        <th>- statsWithCompletionHandler:</th>
      </tr>

                        <tr>
        <td>
                  <p>Gets the call's statistics.
</p>
          <pre><code>- (void)statsWithCompletionHandler:
(void (^)( NSDictionary<NSString *, NSString *> *values ))completionHandler;</code></pre>

        </td>
      </tr>


      <tr>
        <th>- sendCallInfo:completionHandler:</th>
      </tr>

      <tr>
        <td>
          <p>Send info to another client with a callback. Info is a Dictionary which you can define by your self:<br>
          - status = YES, code = 0, message = "Send call info successfully." <br>
          - status = NO, code = -1, message = "Send call info failed. The client is not connected to Stringee Server" <br>
          - status = NO, code = -2, message = "Send call info failed. The call data is not existence <br>
          - status = NO, code = -3, message = "Send call info failed. Generic error."
          </p>
          <pre><code>- (void)sendCallInfo:(NSDictionary *)info completionHandler:(void(^)(BOOL status, int code, NSString * message))completionHandler;</code></pre>
        </td>
      </tr>

    </tbody>
  </table>
</div>